name: Build and Push to ECR

on:
  workflow_dispatch:
    inputs:
      repo_name:
        description: 'Repository name to clone'
        required: true
      branch_name:
        description: 'Branch name to use'
        required: true
      image_tag:
        description: 'Image tag (e.g., latest, v1.0.0)'
        required: true
      workflow_uuid: 
        description: "Assign an ID to github actions workflow for tracking.."
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-north-1
  
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4

    - name: Clone target repo
      run: git clone --branch main https://x-access-token:${{ secrets.PAT }}@github.com/${{ github.repository_owner }}/${{ github.event.inputs.repo_name }}.git cloned-repo
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      run: |
        cd cloned-repo
        docker build -t ${{ github.event.inputs.repo_name }}:${{ github.event.inputs.image_tag }} .
    
    - name: Create ECR repository if it doesn't exist
      run: |
        aws ecr describe-repositories --repository-names ${{ github.event.inputs.repo_name }} --region eu-north-1 || aws ecr create-repository --repository-name ${{ github.event.inputs.repo_name }} --region eu-north-1
      env:
        AWS_REGION: eu-north-1
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Tag image with ECR URI
      run: |
        IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ github.event.inputs.repo_name }}:${{ github.event.inputs.image_tag }}
        docker tag ${{ github.event.inputs.repo_name }}:${{ github.event.inputs.image_tag }} $IMAGE_URI
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

    - name: Push Docker image to ECR
      run: |
        docker push $IMAGE_URI
